name: Push Docker Image
on: [push]
jobs:
  deploy-and-restart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create env file
        run: |
          touch .env
          echo ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }} >> .env
          echo ACCESS_KEY_SECRET=${{ secrets.ACCESS_KEY_SECRET }} >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
          echo CLIENT_SECRET=${{ secrets.CLIENT_SECRET }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo MONGO_INSERT_ROOT_USERNAME=${{ secrets.MONGO_INSERT_ROOT_USERNAME }} >> .env
          echo MONGO_INSERT_ROOT_PASSWORD=${{ secrets.MONGO_INSERT_ROOT_PASSWORD }} >> .env
          echo MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }} >> .env
          echo MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }} >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
          echo PING_ENV=${{ secrets.PING_ENV }} >> .env
      - name: 'copy necessary files'
        run: |
          mkdir lego-backend
          cp .env docker-compose-online.yml lego-backend
          cp -r mongo-entrypoint lego-backend
          ls -a lego-backend
      # 通过scp拷贝文件到服务器
      - name: 'copy files to server'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: 'lego-backend'
          target: '~'
      #  登录ssh服务器
      - name: 'login server'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script-stop: true
          # 登录阿里云ACR
          script: |
            docker login --username=${{ secrets.ACR_USERNAME }} --password=${{ secrets.ACR_PASSWORD }} ${{ secrets.ACR_SERVER }}
            cd ~/lego-backend
            docker-compose -f docker-compose-online.yml down
            docker-compose -f docker-compose-online.yml up -d
            rm -rf .env
            docker logout ${{ secrets.ACR_SERVER }}

      